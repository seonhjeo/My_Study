 - 반올림은 최종 데미지 계산 등과 같은 많은 부분에서 사용되지만, 반올림으로 인해 원하지 않는 값이 나올 수 있다.
 - 통상적으로 반올림은 반올림 할 자릿수의 다음 수를 보고 5보다 크거나 같으면 올림, 아니면 내림을 실행한다.
 - 2.73을 -2의 자리에서 반올림하면 2.7이 되고, 2.7을 -1의 자리에서 반올림하면 3이 된다. 그리고 9.99를 -2의 자리에서 반올림하면 10이 아닌 10.0이 된다.

게임 속의 반올림

 - 매우 약한 몬스터가 플레이어를 공격할 때 0.62정도의 데미지를 준다고 가정하면 항상 버림을 적용해 데미지를 0으로 만들거나, 항상 올림을 적용해 데미지를 1로 만들 수 있다. 이는 약한 몬스터가 플레이어를 죽일 수 없나 있나의 차이를 만들어 낸다.
 - 반올림은 항상 모든 계산이 끝난 후에 해야한다. 오차를 일으키고 계산 파워를 많이 잡아먹는다.
 - C#에서는 `Math.Round(x, p)`, `Math.Floor(x, p)`, `Math.Ceil(x, p)`로 실수 x를 p의 자리에 맞춰 각각 반올림, 내림, 올림을 할 수 있다.